{% extends 'base.html.twig' %}

{% block title %}
    {{ parent() }} | Show
{% endblock %}

{% block body %}
    <h1>Detail of series</h1>

    <div>
        <a href="{{ path('serie_edit', {'id': serie.id}) }}"><buttton>Edit</buttton></a>
    </div>

    <div class="detail">
        <img src="{{ asset('images/posters/series/' ~ serie.poster) }}" alt="{{ serie.poster }} poster">
        <div class="infos">
            <div>{{ serie.name }} - {{ serie.firstAirDate | date('Y') }}</div>
            <div>User rating <span class="information">{{ serie.vote }}</span></div>
            <div>Categorired in <span class="information">{{ serie.genres }}</span></div>
            <div>Serie status <span class="information">{{ serie.status }}</span></div>
            <br>
            <div>Details</div>
            <p>{{ serie.overview }}</p>
            <a href="{{ path('serie_delete', {'id': serie.id}) }}" onclick="return confirm('Are you sure to delete this serie ?')">Delete serie</a>
            <button onclick="updateLike(1)">Like</button>
            <button onclick="updateLike(0)">Dislike</button>
            <div>&nbsp;<span id="serie-like">{{ serie.likes }}</span> likes</div>
        </div>
    </div>

    <section class="seasons">
        {% for season in serie.seasons %}
            <div class="season-detail">
                <img src="{{ asset('images/posters/seasons/' ~ season.poster) }}" alt="{{ serie.name }} #{{ season.number }}">
                <div>
                    <p>Season {{ season.number }} ({{ season.firstAirDate | date('Y') }})</p>
                    <a href="{{ path('season_delete', {'id': season.id}) }}" onclick="return confirm('Are you sure to delete this season ?')">Delete season</a>
                </div>
            </div>
        {% endfor %}
    </section>
{% endblock %}

{% block extraJS %}
    <script>
        const updateLike = (value) => {

            let data = { serieId: {{ serie.id }}, like: value };

            fetch('{{ path('api_series_like') }}', {method: 'POST', body: JSON.stringify(data)}).then(responses => {
                responses.json().then(series => {
                    let likesCounter = document.getElementById('serie-like');
                    likesCounter.innerHTML = series.likes;
                })
            });
        }
    </script>
{% endblock %}

{% block extraCSS %}
    <style>
        body {
            background-image: linear-gradient(rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 1)), url("{{ asset('images/backdrops/' ~ serie.backdrop) }}");
            background-repeat: no-repeat;
            background-size: cover;
            background-attachment: fixed;
        }
    </style>
{% endblock %}

